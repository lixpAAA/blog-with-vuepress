(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{328:function(t,o,r){"use strict";r.r(o);var e=r(33),n=Object(e.a)({},(function(){var t=this,o=t.$createElement,r=t._self._c||o;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h2",{attrs:{id:"prototype"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#prototype"}},[t._v("#")]),t._v(" prototype")]),t._v(" "),r("ul",[r("li",[t._v("每个函数都一个prototype属性")]),t._v(" "),r("li",[r("strong",[t._v("prototype是函数才有的属性")])]),t._v(" "),r("li",[t._v('函数的prototype属性指向 调用该函数的构造函数创建的实例的原型。 每个js对象（null除外）在创建的时候都会关联另一对象，他就是原型, 每个对象都会从原型"继承属性"')]),t._v(" "),r("li",[t._v("每个原型都有一个constructor属性指向关联的构造函数")]),t._v(" "),r("li",[r("strong",[t._v("person."),r("strong",[t._v("proto")]),t._v(" === Person.prototype")])]),t._v(" "),r("li",[r("strong",[t._v("Person === Person.prototype.constructor")])])]),t._v(" "),r("h2",{attrs:{id:"实例与原型"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#实例与原型"}},[t._v("#")]),t._v(" 实例与原型")]),t._v(" "),r("p",[t._v("当读取对象属性时，如果在本对象中找不到就会去与之关联的原型对象中查找，如果还找不到，就去原型的原型查找，直至顶层。\n举个例：")]),t._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v(" function Person() {}\n Person.prototype.name = 'lxp'\n var person = new Person()\n person.name = 'lixp'\n console.log(person.name) // lixp\n delete person.name // 只会作用于自身属性，原型及原型链不会影响\n console.log(person.name) // lxp\n")])])]),r("h2",{attrs:{id:"原型的原型"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#原型的原型"}},[t._v("#")]),t._v(" 原型的原型")]),t._v(" "),r("p",[t._v("既然原型也是一个对象，那么就可以：")]),t._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v("var obj = new Object()\nobj.name = 'lxp'\nconsole.log(obj.name) // lxp\n")])])]),r("p",[t._v("此时"),r("strong",[t._v("obj."),r("strong",[t._v("proto")]),t._v(" === Object.prototype和Object.prototype."),r("strong",[t._v("proto")]),t._v(" === obj."),r("strong",[t._v("proto")]),t._v("."),r("strong",[t._v("proto")]),t._v(" === null")]),t._v(",也就是对象的顶层原型为null\n最后附上一张关系图：\n"),r("img",{attrs:{src:"/prototype5.png",alt:"avatar"}})]),t._v(" "),r("h2",{attrs:{id:"补充"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#补充"}},[t._v("#")]),t._v(" 补充")]),t._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v("function Person(){}\nvar person = new Person()\nconsole.log(person.constructor === Person) // true\n")])])]),r("p",[t._v("也就是说"),r("strong",[t._v("person.constructor === Person === Person.prototype.constructor")])])])}),[],!1,null,null,null);o.default=n.exports}}]);