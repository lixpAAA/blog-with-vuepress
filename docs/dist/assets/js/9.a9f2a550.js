(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{331:function(a,e,n){"use strict";n.r(e);var s=n(33),t=Object(s.a)({},(function(){var a=this,e=a.$createElement,n=a._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[n("h2",{attrs:{id:"作用域"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#作用域"}},[a._v("#")]),a._v(" 作用域")]),a._v(" "),n("ul",[n("li",[a._v("作用域是指程序源代码中定义变量的区域。")]),a._v(" "),n("li",[a._v("作用域规定了如何查找变量，也就是确定当前执行代码对变量的访问权限。")]),a._v(" "),n("li",[a._v("JavaScript 采用词法作用域(lexical scoping)，也就是静态作用域。")])]),a._v(" "),n("h2",{attrs:{id:"静态作用域"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#静态作用域"}},[a._v("#")]),a._v(" 静态作用域")]),a._v(" "),n("p",[a._v("Javascript采用词法作用域，也就是静态作用域，"),n("strong",[a._v("函数的作用域在函数定义的时候就已经决定了")]),a._v("\n举个例子能更好说明这一点：")]),a._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("var value = 1;\nfunction foo() {\n  console.log(value);\n}\nfunction bar() {\n  var value = 2;\n  foo();\n}\nbar(); // 1 \n")])])]),n("p",[a._v("执行 foo 函数，先从 foo 函数内部查找是否有局部变量 value，如果没有，就根据"),n("strong",[a._v("书写的位置")]),a._v("，查找上面一层的代码，也就是 value 等于 1，所以结果会打印 1。\n再来看个例子：")]),a._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v('var scope = "global scope";\nfunction checkscope(){\n    var scope = "local scope";\n    function f(){\n        return scope;\n    }\n    return f();\n}\ncheckscope(); // local scope\n')])])]),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v('var scope = "global scope";\nfunction checkscope(){\n    var scope = "local scope";\n    function f(){\n        return scope;\n    }\n    return f;\n}\ncheckscope()(); // local scope\n')])])]),n("p",[a._v("JavaScript 函数的执行用到了作用域链，这个作用域链是在函数定义的时候创建的。嵌套的函数 f() 定义在这个作用域链里，其中的变量 scope 一定是局部变量，不管何时何地执行函数 f()，这种绑定在执行 f() 时依然有效。")])])}),[],!1,null,null,null);e.default=t.exports}}]);